
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4F560368AE9693381D90D1471CCBECCC'
    
_lr_action_items = {'RPAREN':([1,2,4,8,11,12,13,14,15,],[-5,-7,-6,13,-4,-3,-8,-1,-2,]),'DIVIDE':([1,2,4,11,12,13,14,15,],[6,-7,-6,-4,-3,-8,6,6,]),'NUMBER':([0,3,6,7,9,10,],[2,2,2,2,2,2,]),'TIMES':([1,2,4,11,12,13,14,15,],[7,-7,-6,-4,-3,-8,7,7,]),'PLUS':([1,2,4,5,8,11,12,13,14,15,],[-5,-7,-6,9,9,-4,-3,-8,-1,-2,]),'LPAREN':([0,3,6,7,9,10,],[3,3,3,3,3,3,]),'MINUS':([1,2,4,5,8,11,12,13,14,15,],[-5,-7,-6,10,10,-4,-3,-8,-1,-2,]),'$end':([1,2,4,5,11,12,13,14,15,],[-5,-7,-6,0,-4,-3,-8,-1,-2,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'term':([0,3,9,10,],[1,1,14,15,]),'expression':([0,3,],[5,8,]),'factor':([0,3,6,7,9,10,],[4,4,11,12,4,4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_arithmetic_op','decafparser.py',43),
  ('expression -> expression MINUS term','expression',3,'p_arithmetic_op','decafparser.py',44),
  ('term -> term TIMES factor','term',3,'p_arithmetic_op','decafparser.py',45),
  ('term -> term DIVIDE factor','term',3,'p_arithmetic_op','decafparser.py',46),
  ('expression -> term','expression',1,'p_expression_term','decafparser.py',53),
  ('term -> factor','term',1,'p_term_factor','decafparser.py',57),
  ('factor -> NUMBER','factor',1,'p_factor_num','decafparser.py',61),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','decafparser.py',65),
]
